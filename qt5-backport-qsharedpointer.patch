diff --git a/src/corelib/tools/qsharedpointer.cpp b/src/corelib/tools/qsharedpointer.cpp
index 2fd7590..cf808d3 100644
--- a/src/corelib/tools/qsharedpointer.cpp
+++ b/src/corelib/tools/qsharedpointer.cpp
@@ -698,6 +698,35 @@
 */
 
 /*!
+    \fn void QSharedPointer::reset()
+    \since 5.0
+
+    Same as clear(). For std::shared_ptr compatibility.
+*/
+
+/*!
+    \fn void QSharedPointer::reset(T *t)
+    \since 5.0
+
+    Resets this QSharedPointer object to point to \a t
+    instead. Equivalent to:
+    \code
+    QSharedPointer<T> other(t); this->swap(other);
+    \endcode
+*/
+
+/*!
+    \fn void QSharedPointer::reset(T *t, Deleter deleter)
+    \since 5.0
+
+    Resets this QSharedPointer object to point to \a t
+    instead, with deleter \a deleter. Equivalent to:
+    \code
+    QSharedPointer<T> other(t, deleter); this->swap(other);
+    \endcode
+*/
+
+/*!
     \fn QWeakPointer::QWeakPointer()
 
     Creates a QWeakPointer that points to nothing.
diff --git a/src/corelib/tools/qsharedpointer.h b/src/corelib/tools/qsharedpointer.h
index 06923b1..f9e1c6a 100644
--- a/src/corelib/tools/qsharedpointer.h
+++ b/src/corelib/tools/qsharedpointer.h
@@ -86,6 +86,11 @@ public:
 
     void clear();
 
+    void reset();
+    void reset(T *t);
+    template <typename Deleter>
+    void reset(T *t, Deleter deleter);
+
     // casts:
     template <class X> QSharedPointer<X> staticCast() const;
     template <class X> QSharedPointer<X> dynamicCast() const;
diff --git a/src/corelib/tools/qsharedpointer_impl.h b/src/corelib/tools/qsharedpointer_impl.h
index 526ad30..870cfca 100644
--- a/src/corelib/tools/qsharedpointer_impl.h
+++ b/src/corelib/tools/qsharedpointer_impl.h
@@ -514,6 +514,13 @@ public:
     inline void swap(QSharedPointer &other)
     { QSharedPointer<T>::internalSwap(other); }
 
+    inline void reset() { clear(); }
+    inline void reset(T *t)
+    { QSharedPointer copy(t); swap(copy); }
+    template <typename Deleter>
+    inline void reset(T *t, Deleter deleter)
+    { QSharedPointer copy(t, deleter); swap(copy); }
+
     template <class X>
     QSharedPointer<X> staticCast() const
     {
